
&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииПриЧтенииНаСервере();
	КонецЕсли;
	
	ВалютаДокумента = ИнтеграцияЕГАИСПереопределяемый.ПредставлениеВалютыРегламентированногоУчета();
	
	Элементы.СтатусЕГАИСПредставление.Доступность = ПравоДоступа("Изменение", Метаданные.Документы.ТТНВходящаяЕГАИС);
	
	ОтборСтрок = "Все";
	
	Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
		Элементы.ДокументОснование.Видимость = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначения.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФормЕГАИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), НовыйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КлассификаторОрганизацийЕГАИС" Тогда
		Если Параметр = Объект.Грузополучатель
			Или Параметр = Объект.Грузоотправитель
			Или Параметр = Объект.Поставщик Тогда
			
			ЗаполнитьИнформациюПоСопоставлению();
			
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС" Тогда
		
		Если Параметр.Ссылка <> Неопределено Тогда
			
			ЗаполнитьСопоставленныеТовары(Параметр.Ссылка);
			
		Иначе
			
			ЭтотОбъект.Прочитать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = ИнтеграцияЕГАИСКлиентПереопределяемый.ИмяСобытияЗаписиПоступленияТоваров() Тогда
		ОбновитьТекстПоступлениеТоваров();
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусЕГАИСВФормахДокументов)) Тогда
		
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	// Обновление гиперссылки на создание документа Возврат из регистра №2
	Если ИмяСобытия = "Запись_ПередачаВРегистр2ЕГАИС"
		И Параметр.Основание = Объект.Ссылка Тогда
		
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ТТНВходящаяЕГАИС"
		И Параметр.Свойство("Ссылка")
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("Перечитать") Тогда
			ЭтотОбъект.Прочитать();
		Иначе
			ОбновитьСтатусЕГАИС();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Основание = Объект.Ссылка Тогда
		
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииПриЧтенииНаСервере();
	
	СобытияФормЕГАИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ОбновитьСтатусЕГАИС();
	
	ОбновитьДанныеКлассификаторовЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Объект.ДокументОснование);
	Оповестить("Запись_ТТНВходящаяЕГАИС", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ТТНВходящаяЕГАИС.Форма.ФормаДокумента.Записать");
	
	ОчиститьСообщения();
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ТТНВходящаяЕГАИС.Форма.ФормаДокумента.Провести");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ТТНВходящаяЕГАИС.Форма.ФормаДокумента.ПровестиИЗакрыть");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьКлассификаторыЕГАИС(Команда)
	
	ОчиститьСообщения();
	
	ОткрытьФормуСопоставленияКлассификаторовЕГАИС();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГрузоотправительКонтрагентНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Грузоотправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательКонтрагентНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Грузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикКонтрагентНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Поставщик);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияГрузоотправительНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Грузоотправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияГрузополучательНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Грузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПоставщикНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.Поставщик);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтрокПриИзменении(Элемент)
	
	УстановитьОтборСтрок(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьРасхожденияПриИзменении(Элемент)
	
	Элементы.ТоварыКоличествоФакт.Видимость = Объект.ЕстьРасхождения;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Товарно-транспортная накладная ЕГАИС (входящая) была изменена. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Товарно-транспортная накладная ЕГАИС (входящая) не проведена. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументаЕГАИСОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСКлиент.ТекстДокументаЕГАИСОбработкаНавигационнойСсылки(ЭтотОбъект, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьТекстПоступлениеТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ОбновитьТекстПоступлениеТоваров()
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПоступленияПриИзменении(Элемент)
	
	ОбновитьТекстПоступлениеТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПоступленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьДокументПоступления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПоступленияСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СоздатьДокументПоступления(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПоступлениеТоваровОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если "ОткрытьПоступление" = НавигационнаяСсылкаФорматированнойСтроки Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,Объект.ДокументОснование);
		
	ИначеЕсли "ОформитьПоступление" = НавигационнаяСсылкаФорматированнойСтроки Тогда
		
		СтандартнаяОбработка = Ложь;
		СоздатьДокументПоступления(Истина);
		
	ИначеЕсли "СвязатьСПоступлением" = НавигационнаяСсылкаФорматированнойСтроки Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбратьДокументПоступления(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТабличнойЧастиТовары

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ТоварыНоменклатура Тогда
		
		ЗаполнитьСпискиВыбораНоменклатуры(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ТоварыАлкогольнаяПродукция Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.АлкогольнаяПродукция);
		ОткрытьФорму("Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		ПараметрыЗаполнения = СобытияФормЕГАИСКлиент.СтруктураПараметрыЗаполнения();
		ПараметрыЗаполнения.ОбработатьУпаковки = Ложь;
		СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииНоменклатуры(
			ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения,
			ПараметрыЗаполнения);
	Иначе
		ТекущиеДанные.Характеристика = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	УстановитьОтборСтрок(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(
		ЭтотОбъект,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияНоменклатуры(
		ЭтотОбъект,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	УстановитьОтборСтрок(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.НачалоВыбораХарактеристики(ЭтотОбъект, ТекущаяСтрока, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ГосударственныеИнформационныеСистемыПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставлениеНоменклатура"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставлениеХарактеристика"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставленоКоличество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаЕГАИС);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставленоКоличество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаЕГАИС);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере()
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ЕстьПравоСозданияПоступления = ИнтеграцияЕГАИСПереопределяемый.ЕстьПравоСозданияПоступления();
	ЕстьПравоИзмененияПоступления = ИнтеграцияЕГАИСПереопределяемый.ЕстьПравоИзмененияПоступления();
	
	ОбновитьСтатусЕГАИС();
	
	ОбновитьДанныеКлассификаторовЕГАИС();
	
	ОбновитьТекстПоступлениеТоваров();
	ОбновитьВидимостьРасхождений();
	
КонецПроцедуры

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусЕГАИС        = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияЕГАИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусЕГАИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПодтвердитеПолучение);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОткажитесьОтНакладной);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОтменуПроведения);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(
		СтатусЕГАИС,
		ДальнейшееДействие,
		ДопустимыеДействия);
	
	СформироватьТекстДокументаЕГАИС(СтатусЕГАИС);
	
	ОбновитьВидимостьРасхождений();
	
	СтатусыОтказа = Новый СписокЗначений;
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Отменен);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОтмененПоставщиком);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияКПередаче);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияПереданВУТМ);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияОбрабатываетсяЕГАИС);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияОшибка);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаКПередаче);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаПереданВУТМ);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОбрабатываетсяЕГАИС);
	СтатусыОтказа.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОшибка);
	
	Элементы.ТекстПоступлениеТоваров.Видимость = (СтатусыОтказа.НайтиПоЗначению(СтатусЕГАИС) = Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	ОчиститьСообщения();
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПодтвердитьПолучение" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПодтвердитеПолучение"));
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтказатьсяОтНакладной" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОткажитесьОтНакладной"));
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗапроситьОтменуПроведения" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОтменуПроведения"));
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Функция ОбновитьВидимостьРасхождений()
	
	Элементы.ТоварыКоличествоФакт.Видимость = Объект.ЕстьРасхождения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСтрок(Форма)
	
	Если Форма.ОтборСтрок = "ТолькоНесопоставленные" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Сопоставлено", Ложь);
		Форма.Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	Иначе
		Форма.Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Функция ДанныеДляСопоставления()
	
	ОрганизацииЕГАИС = Новый ТаблицаЗначений;
	ОрганизацииЕГАИС.Колонки.Добавить("ОрганизацияЕГАИС", Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	
	НоваяСтрока = ОрганизацииЕГАИС.Добавить();
	НоваяСтрока.ОрганизацияЕГАИС = Объект.Грузоотправитель;
	НоваяСтрока = ОрганизацииЕГАИС.Добавить();
	НоваяСтрока.ОрганизацияЕГАИС = Объект.Грузополучатель;
	НоваяСтрока = ОрганизацииЕГАИС.Добавить();
	НоваяСтрока.ОрганизацияЕГАИС = Объект.Поставщик;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Объект.Ссылка);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Товары");
	ВозвращаемоеЗначение.Вставить("ОрганизацииЕГАИС");
	ВозвращаемоеЗначение.Вставить("РежимСопоставленияПоНакладной", Истина);
	ВозвращаемоеЗначение.Вставить("ТоварноТранспортныеНакладные", МассивСсылок);
	
	ВозвращаемоеЗначение.ОрганизацииЕГАИС = ПоместитьВоВременноеХранилище(
		ОрганизацииЕГАИС,
		УникальныйИдентификатор);
	
	ВозвращаемоеЗначение.Товары = ПоместитьВоВременноеХранилище(
		Объект.Товары.Выгрузить(, "АлкогольнаяПродукция, ИдентификаторУпаковки, Номенклатура, Характеристика"),
		УникальныйИдентификатор);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуСопоставленияКлассификаторовЕГАИС(ДополнительныеПараметры = Неопределено)
	
	ПараметрыОткрытияФормы = ДанныеДляСопоставления();
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСопоставленияКлассификаторовЕГАИС(
		ЭтотОбъект,
		Новый ОписаниеОповещения(
			"ОбработатьРезультатСопоставленияКлассификаторовЕГАИС",
			ЭтотОбъект,
			ДополнительныеПараметры),
		ПараметрыОткрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораДокументаПоступления(ВыбранныйДокумент, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранныйДокумент) Тогда
		
		Если ИнтеграцияЕГАИСВызовСервера.ЕстьРасхожденияМеждуДокументомПоступленияИТТНЕГАИС(Объект.Ссылка, ВыбранныйДокумент) Тогда
			
			ДополнительныеПараметрыВопроса = Новый Структура;
			ДополнительныеПараметрыВопроса.Вставить("ДокументПоступления", ВыбранныйДокумент);
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения(
					"ОбработатьОтветНаВопросОРасхожденияхПослеВыбораДокументаПоступления",
					ЭтотОбъект,
					ДополнительныеПараметрыВопроса),
				НСтр("ru='В товарах выбранного поступления есть алкогольная продукция, которой нет в ТТН. Продолжить выбор?'"), 
				РежимДиалогаВопрос.ДаНет);
		Иначе
			
			ОбработатьВыборДокументаПоступления(ВыбранныйДокумент);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОРасхожденияхПослеВыбораДокументаПоступления(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьВыборДокументаПоступления(ДополнительныеПараметры.ДокументПоступления);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеКлассификаторовЕГАИС()
	
	ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.Товары);
	
	ЗаполнитьИнформациюПоСопоставлению();
	ЗаполнитьСопоставленныеТовары();
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьРезультатСопоставленияКлассификаторовЕГАИС(АдресВоВременномХранилище)
	
	Таблица = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Для Каждого СтрокаДанных Из Таблица Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("АлкогольнаяПродукция",  СтрокаДанных.АлкогольнаяПродукция);
		ПараметрыОтбора.Вставить("ИдентификаторУпаковки", СтрокаДанных.ИдентификаторУпаковки);
		НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.Номенклатура = СтрокаДанных.Номенклатура;
			НайденнаяСтрока.Характеристика = СтрокаДанных.Характеристика;
		КонецЦикла;
		
	КонецЦикла;
	
	ОбновитьДанныеКлассификаторовЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатСопоставленияКлассификаторовЕГАИС(АдресВоВременномХранилище, ДополнительныеПараметры) Экспорт
	
	Если АдресВоВременномХранилище = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ПрименитьРезультатСопоставленияКлассификаторовЕГАИС(АдресВоВременномХранилище);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("СоздатьПоступление") Тогда
			
			СоздатьДокументПоступления(Ложь);
			
		ИначеЕсли ДополнительныеПараметры.Свойство("ВыбратьПоступление") Тогда
			
			ВыбратьДокументПоступления(Ложь);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоСопоставлению()
	
	МассивОрганизаций = Новый Массив;
	МассивОрганизаций.Добавить(Объект.Грузоотправитель);
	МассивОрганизаций.Добавить(Объект.Грузополучатель);
	МассивОрганизаций.Добавить(Объект.Поставщик);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Классификатор.Ссылка,
	|	Классификатор.Контрагент,
	|	Классификатор.СоответствуетОрганизации
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК Классификатор
	|ГДЕ
	|	Классификатор.Ссылка В (&МассивОрганизаций)";
	
	Запрос.УстановитьПараметр("МассивОрганизаций",МассивОрганизаций);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Объект.Грузоотправитель = Выборка.Ссылка Тогда
			
			ГрузоотправительПредставлениеСопоставленного = Выборка.Контрагент;
			
			Если ЗначениеЗаполнено(ГрузоотправительПредставлениеСопоставленного) Тогда
				Элементы.ГруппаГрузоотправительПартнер.ТекущаяСтраница = Элементы.ГруппаГрузоотправительСопоставлен;
			Иначе
				Элементы.ГруппаГрузоотправительПартнер.ТекущаяСтраница = Элементы.ГруппаГрузоотправительНеСопоставлен;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.Грузополучатель = Выборка.Ссылка Тогда
			
			ГрузополучательПредставлениеСопоставленного = Выборка.Контрагент;
			
			Если ЗначениеЗаполнено(ГрузополучательПредставлениеСопоставленного) Тогда
				Элементы.ГруппаГрузополучательПартнер.ТекущаяСтраница = Элементы.ГруппаГрузополучательСопоставлен;
			Иначе
				Элементы.ГруппаГрузополучательПартнер.ТекущаяСтраница = Элементы.ГруппаГрузополучательНеСопоставлен;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.Поставщик = Выборка.Ссылка Тогда
			
			ПоставщикПредставлениеСопоставленного = Выборка.Контрагент;
			
			Если ЗначениеЗаполнено(ПоставщикПредставлениеСопоставленного) Тогда
				Элементы.ГруппаПоставщикПартнер.ТекущаяСтраница = Элементы.ГруппаПоставщикСопоставлен;
			Иначе
				Элементы.ГруппаПоставщикПартнер.ТекущаяСтраница = Элементы.ГруппаПоставщикНеСопоставлен;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ГруппаГрузоотправительПартнер.Видимость = ЗначениеЗаполнено(Объект.Грузоотправитель);
	Элементы.ГруппаГрузополучательПартнер.Видимость  = ЗначениеЗаполнено(Объект.Грузополучатель);
	Элементы.ГруппаПоставщикПартнер.Видимость        = ЗначениеЗаполнено(Объект.Поставщик);
	
	ОбновитьТекстПоступлениеТоваров();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстПоступлениеТоваров()
	
	КоличествоДокументов = ИнтеграцияЕГАИСПереопределяемый.ПолучитьКоличествоВозможныхДокументовПоступленияТоваров(
		Объект.Организация,
		Объект.ТорговыйОбъект,
		ГрузоотправительПредставлениеСопоставленного);
	
	Строки = Новый Массив;
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Если ЕстьПравоСозданияПоступления Тогда
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'Оформить поступление'"),,
					ЦветаСтиля.ЦветГиперссылкиГИСМ,,
					"ОформитьПоступление"));
			Строки.Добавить("    ");
		КонецЕсли;
		Строки.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = 'Связать с поступлением (%1)'"), КоличествоДокументов),,
				ЦветаСтиля.ЦветГиперссылкиГИСМ,,
				"СвязатьСПоступлением"));
		
	КонецЕсли;
	
	ТекстПоступлениеТоваров = Новый ФорматированнаяСтрока(Строки);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборДокументаПоступления(ДокументПоступления)
	
	Если ЗначениеЗаполнено(ДокументПоступления) Тогда
		
		Объект.ДокументОснование = ДокументПоступления;
		
	КонецЕсли;
	
	ОбновитьТекстПоступлениеТоваров();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСопоставленныеТовары(АлкогольнаяПродукция = Неопределено)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.НомерСтроки          КАК НомерСтроки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Номенклатура         КАК Номенклатура,
	|	Товары.Характеристика       КАК Характеристика
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.АлкогольнаяПродукция        КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ СписокАлкогольнойПродукции
	|ИЗ
	|	Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокАлкогольнойПродукции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ СопоставленоПозиций
	|ИЗ
	|	СписокАлкогольнойПродукции КАК СписокАлкогольнойПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = СписокАлкогольнойПродукции.АлкогольнаяПродукция)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокАлкогольнойПродукции.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                          КАК НомерСтроки,
	|	Товары.АлкогольнаяПродукция                 КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(СопоставленоПозиций.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура = &ПустаяНоменклатура
	|			ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура
	|		ИНАЧЕ Товары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Товары.Характеристика = &ПустаяХарактеристика
	|			ТОГДА СоответствиеНоменклатурыЕГАИС.Характеристика
	|		ИНАЧЕ Товары.Характеристика
	|	КОНЕЦ КАК Характеристика
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленоПозиций КАК СопоставленоПозиций
	|		ПО (СопоставленоПозиций.АлкогольнаяПродукция = Товары.АлкогольнаяПродукция)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И (СопоставленоПозиций.Количество = 1)");
	
	Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		ПараметрыОтбора = Новый Структура("АлкогольнаяПродукция", АлкогольнаяПродукция);
		Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить(ПараметрыОтбора, "АлкогольнаяПродукция, Номенклатура, Характеристика, НомерСтроки"));
	Иначе
		Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить(,"АлкогольнаяПродукция, Номенклатура, Характеристика, НомерСтроки"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПустаяНоменклатура", ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	Запрос.УстановитьПараметр("ПустаяХарактеристика", ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Имя));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	НоменклатураДляВыбора.Загрузить(РезультатЗапроса[1].Выгрузить());
	
	Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Объект.Товары.Получить(Выборка.НомерСтроки - 1);
		
		СтрокаТЧ.СопоставленоКоличество = Выборка.Количество;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) 
			И ((СтрокаТЧ.ХарактеристикиИспользуются И ЗначениеЗаполнено(СтрокаТЧ.Характеристика))
				ИЛИ НЕ СтрокаТЧ.ХарактеристикиИспользуются) Тогда
			НоменклатураЗаполнена = Истина;
		Иначе
			НоменклатураЗаполнена = Ложь;
		КонецЕсли;
		
		Если Выборка.Количество = 1 Тогда
			СтрокаТЧ.Сопоставлено = Истина;
			СтрокаТЧ.СопоставлениеНоменклатура   = Строка(Выборка.Номенклатура);
			СтрокаТЧ.СопоставлениеХарактеристика = Строка(Выборка.Характеристика);
		ИначеЕсли Выборка.Количество > 1 Тогда
			СтрокаТЧ.Сопоставлено = НоменклатураЗаполнена;
			СтрокаТЧ.СопоставлениеНоменклатура   = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), Выборка.Количество);
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		Иначе
			СтрокаТЧ.Сопоставлено = НоменклатураЗаполнена;
			СтрокаТЧ.СопоставлениеНоменклатура   = НСтр("ru = '<Не сопоставлено>'");
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументПоступления(СопоставлятьКлассификаторы = Истина)
	
	НесопоставленныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Сопоставлено", Ложь));
	
	Если НесопоставленныеСтроки.Количество() = 0 Тогда
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияДокументаПоступленияТоваровНаОснованииТТНЕГАИС(Объект.Ссылка);
		
	Иначе
		
		Если Не СопоставлятьКлассификаторы Тогда
			Возврат;
		КонецЕсли;
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Сопоставить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбОткрытииФормыСопоставленияКлассификаторовЕГАИС",
				ЭтотОбъект,
				Новый Структура("СоздатьПоступление", Истина)),
			НСтр("ru='В документе найдены несопоставленные элементы классификаторов ЕГАИС.
			          |Сопоставить классификаторы?'"),
			Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДокументПоступления(СопоставлятьКлассификаторы = Истина)
	
	НесопоставленныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Сопоставлено", Ложь));
	
	Если НесопоставленныеСтроки.Количество() = 0 Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Организация",              Объект.Организация);
		СтруктураОтбора.Вставить("ТорговыйОбъект",           Объект.ТорговыйОбъект);
		Если ЗначениеЗаполнено(ПоставщикПредставлениеСопоставленного) Тогда
			СтруктураОтбора.Вставить("Контрагент", ПоставщикПредставлениеСопоставленного);
		КонецЕсли;
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораДокументаПоступлениеТоваровУслуг(
			ЭтотОбъект,
			Новый ОписаниеОповещения("ПослеВыбораДокументаПоступления", ЭтотОбъект),
			СтруктураОтбора);
		
	Иначе
		
		Если Не СопоставлятьКлассификаторы Тогда
			Возврат;
		КонецЕсли;
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Сопоставить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения(
				"ОбработатьОтветНаВопросОбОткрытииФормыСопоставленияКлассификаторовЕГАИС",
				ЭтотОбъект,
				Новый Структура("ВыбратьПоступление",Истина)),
			НСтр("ru='В документе найдены несопоставленные элементы классификаторов ЕГАИС.
			          |Сопоставить классификаторы?'"),
			Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбОткрытииФормыСопоставленияКлассификаторовЕГАИС(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуСопоставленияКлассификаторовЕГАИС(ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТекстДокументаЕГАИС(СтатусЕГАИС)
	
	ИспользоватьРегистр2 = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Объект.Грузополучатель);
	
	Если Не ИспользоватьРегистр2 Тогда
		
		ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока("");
		
	Иначе
		
		Если СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями
			Или СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СтатусыОформленияДокументовЕГАИС.Документ,
			|	СтатусыОформленияДокументовЕГАИС.СтатусОформления КАК СтатусОформления
			|ИЗ
			|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
			|ГДЕ
			|	СтатусыОформленияДокументовЕГАИС.Основание = &Основание
			|");
			
			Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
			ДанныеПоСтатусам = Запрос.Выполнить().Выгрузить();
			
			СтатусыОформления = Новый Структура;
			Для Каждого СтрокаТЧ Из ДанныеПоСтатусам Цикл
				СтатусыОформления.Вставить(СтрокаТЧ.Документ.Метаданные().Имя, СтрокаТЧ.СтатусОформления);
			КонецЦикла;
			
			ДокументыПоОснованию = ИнтеграцияЕГАИСВызовСервера.ДокументыПоОснованию(Объект.Ссылка);
			Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ПередачаВРегистр2ЕГАИС, ДокументыПоОснованию, СтатусыОформления);
			
			ФорматированныеСтроки = Новый Массив;
			ФорматированныеСтроки.Добавить(Данные.Представление);
			
			ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока(ФорматированныеСтроки);
			
		Иначе
			
			ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока("");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореНоменклатуры(Номенклатура, ДополнительныеПараметры) Экспорт
	
	Если Номенклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Номенклатура = Номенклатура;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораНоменклатуры(ТекущаяСтрока)
	
	СписокВыбораНоменклатура = Элементы.ТоварыНоменклатура.СписокВыбора;
	СписокВыбораНоменклатура.Очистить();
	
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("АлкогольнаяПродукция", ТекущаяСтрока.АлкогольнаяПродукция));
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		СписокВыбораНоменклатура.Добавить(СтрокаТЧ.Номенклатура);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
