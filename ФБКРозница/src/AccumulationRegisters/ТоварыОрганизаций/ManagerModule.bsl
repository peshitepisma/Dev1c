#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.4.1
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.ТоварыОрганизаций";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ДанныеРегистра.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	// удаление движений для номенклатуры с типом "Работа"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Движения
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|	ПО Движения.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = КлючиАналитики.Номенклатура
	|	И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
	ИмяРегистра = "ТоварыОрганизаций";
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыОрганизаций";
	
	СписокДокументов = Новый Массив();
	СписокДокументов.Добавить("Документ.ТаможеннаяДекларацияИмпорт");
	
	Для Каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1 в движениях регистра.
// Очищается кор.вид запасов для комиссионного товара.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыОрганизаций";
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ТоварыОрганизаций;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра);
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Движения.Регистратор                   КАК Регистратор,
	|	Движения.Период                        КАК Период,
	|	Движения.ВидДвижения                   КАК ВидДвижения,
	|	Движения.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	Движения.Организация                   КАК Организация,
	|	Движения.ВидЗапасов                    КАК ВидЗапасов,
	|	Движения.НомерГТД                      КАК НомерГТД,
	|	Движения.Количество                    КАК Количество,
	|	ВЫБОР
	|		КОГДА Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ИНАЧЕ Движения.ХозяйственнаяОперация
	|	КОНЕЦ                                  КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА Движения.НалогообложениеНДС
	|	КОНЕЦ                                  КАК НалогообложениеНДС,
	|	Движения.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		И Движения.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|		И Движения.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|		И Движения.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
	|		И Движения.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Движения.КорВидЗапасов
	|	КОНЕЦ                                  КАК КорВидЗапасов,
	|	Движения.ОрганизацияОтгрузки           КАК ОрганизацияОтгрузки,
	|	Движения.ДокументРеализации            КАК ДокументРеализации,
	|	Движения.СтатьяРасходов                КАК СтатьяРасходов,
	|	Движения.АналитикаРасходов             КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА Движения.Номенклатура
	|	КОНЕЦ                                  КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА Движения.Характеристика
	|	КОНЕЦ                                  КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА Движения.Первичное
	|	КОНЕЦ                                  КАК Первичное,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА Движения.РасчетПартий
	|	КОНЕЦ                                  КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                           КАК УдалитьПартияПроизводства
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Движения
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|ГДЕ
	|	Движения.Регистратор = &Регистратор
	|	И НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		
		Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			Набор = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			Набор.Загрузить(Результат);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ТаможеннаяДекларацияИмпорт");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы,
		"РегистрНакопления.ТоварыОрганизаций", Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли
