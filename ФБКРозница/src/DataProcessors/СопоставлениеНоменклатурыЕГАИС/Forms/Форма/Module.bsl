&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АлкогольнаяПродукция = Параметры.АлкогольнаяПродукция;
	
	Если ТипЗнч(Параметры.НоменклатураДляВыбора) = Тип("Массив") Тогда
		Элементы.ТоварыНоменклатура.СписокВыбора.ЗагрузитьЗначения(Параметры.НоменклатураДляВыбора);
	КонецЕсли;
	
	Реквизиты = ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(АлкогольнаяПродукция);
	
	ГосударственныеИнформационныеСистемыПереопределяемый.УстановитьПараметрыВыбораНоменклатуры(ЭтотОбъект);
	
	ГосударственныеИнформационныеСистемыПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект, "ТоварыХарактеристика");
	
	ЗагрузитьТовары();
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС) Тогда
		ТолькоПросмотр = Истина;
		Элементы.ТоварыЗаписатьИЗакрыть.Доступность                            = Ложь;
		Элементы.ДекорацияНедостаточноПравНаИзменениеКлассификаторов.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), НовыйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросПередЗакрытием", ЭтотОбъект),
			НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыНоменклатураСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияНоменклатуры(ЭтотОбъект, Реквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(ЭтотОбъект, Реквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьДанныеИЗакрытьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ГосударственныеИнформационныеСистемыПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(
		ЭтотОбъект,
		"ТоварыХарактеристика",
		"Объект.Товары.ХарактеристикиИспользуются");
	
КонецПроцедуры

#Область Прочее

&НаКлиенте
Процедура ЗаписатьДанныеИЗакрытьФорму()
	
	ОчиститьСообщения();
	
	ДанныеЗаписаны = ЗаписатьСоответствиеНоменклатуры();
	Если ДанныеЗаписаны Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Ссылка", АлкогольнаяПродукция);
		Оповестить("ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС", ПараметрыОповещения, ЭтотОбъект);
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросПередЗакрытием(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьДанныеИЗакрытьФорму();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТовары()
	
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок");
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТоварыКеш.Загрузить(Объект.Товары.Выгрузить());
	
	ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.Товары);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьСоответствиеНоменклатуры()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки,
	|	Т.Номенклатура,
	|	Т.Характеристика
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура    КАК Номенклатура,
	|	Товары.Характеристика  КАК Характеристика
	|ПОМЕСТИТЬ Дубли
	|ИЗ
	|	Товары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|ИМЕЮЩИЕ
	|	Количество(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Дубли.Номенклатура           КАК Номенклатура,
	|	Дубли.Характеристика         КАК Характеристика,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Дубли КАК Дубли
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО Товары.Номенклатура = Дубли.Номенклатура
	|		И Товары.Характеристика = Дубли.Характеристика
	|СГРУППИРОВАТЬ ПО
	|	Дубли.Номенклатура,
	|	Дубли.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки     КАК НомерСтроки,
	|	Товары.Номенклатура    КАК Номенклатура,
	|	Товары.Характеристика  КАК Характеристика,
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО (Товары.Номенклатура = Т.Номенклатура)
	|			И (Товары.Характеристика = Т.Характеристика)
	|ГДЕ
	|	Т.АлкогольнаяПродукция <> &АлкогольнаяПродукция
	|");
	
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	Запрос.УстановитьПараметр("Товары",               Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Отказ = Ложь;
	
	Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'Позиция номенклатуры (%1) в строке %2 уже сопоставлена с алкогольной продукцией %3'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				ТекстОшибки,
				Выборка.Номенклатура,
				Выборка.НомерСтроки),,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.Товары", Выборка.НомерСтроки, "Номенклатура"),,Отказ);
		
	КонецЦикла;
	
	Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 найдена повторяющаяся позиция номенклатуры (%2)'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				ТекстОшибки,
				Выборка.НомерСтроки,
				Выборка.Номенклатура),,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.Товары", Выборка.НомерСтроки, "Номенклатура"),,Отказ);
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 не заполнено поле ""Номенклатура""'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ТекстОшибки, СтрокаТЧ.НомерСтроки),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.Товары", СтрокаТЧ.НомерСтроки, "Номенклатура"),,Отказ);
			
		КонецЕсли;
		
		Если СтрокаТЧ.ХарактеристикиИспользуются И НЕ ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 не заполнена характеристика номенклатуры'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ТекстОшибки, СтрокаТЧ.НомерСтроки),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.Товары", СтрокаТЧ.НомерСтроки, "Характеристика"),,Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура, Истина);
			НаборЗаписей.Отбор.Характеристика.Установить(СтрокаТЧ.Характеристика, Истина);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Номенклатура         = СтрокаТЧ.Номенклатура;
			НоваяЗапись.Характеристика       = СтрокаТЧ.Характеристика;
			НоваяЗапись.АлкогольнаяПродукция = АлкогольнаяПродукция;
			НоваяЗапись.Порядок              = СтрокаТЧ.НомерСтроки;
			
			НаборЗаписей.Записать();
		
		КонецЦикла;
	
		Для Каждого СтрокаТЧ Из ТоварыКеш Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрокаТЧ.Характеристика);
			
			НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура, Истина);
				НаборЗаписей.Отбор.Характеристика.Установить(СтрокаТЧ.Характеристика, Истина);
				НаборЗаписей.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = НСтр("ru = 'При записи соответствия номенклатуры произошла ошибка:
		                         |%1'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(ТекстОшибки, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
		
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПриВыбореНоменклатуры(Номенклатура, ДополнительныеПараметры) Экспорт
	
	Если Номенклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Номенклатура = Номенклатура;
	ТоварыНоменклатураПриИзменении("");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыЗаполнения = СобытияФормЕГАИСКлиент.СтруктураПараметрыЗаполнения();
	ПараметрыЗаполнения.ОбработатьУпаковки = Ложь;
	СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииНоменклатуры(
		ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения,
		ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти