
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Параметры.ТекстОшибкиКонтроляАкцизныхМарок) Тогда
		Заголовок = НСтр("ru = 'Контроль акцизных марок'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольАкцизныхМарок;
		
		Элементы.ТекстОшибкиКонтроляАкцизныхМарок.Заголовок = Параметры.ТекстОшибкиКонтроляАкцизныхМарок;
	ИначеЕсли Параметры.Редактирование Тогда
		Заголовок = НСтр("ru = 'Редактирование акцизных марок'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРедактированиеСпискаМарок;
		
		АкцизныеМарки.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище));
		Элементы.АкцизныеМаркиСгенерироватьАкцизныеМарки.Видимость = ОбщегоНазначенияКлиентСервер.РежимОтладки();
		Элементы.ДекорацияКартинка.Видимость = Ложь;
	Иначе
		Заголовок = НСтр("ru = 'Сканирование акцизной марки'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеАкцизнойМарки;
	КонецЕсли;
	
	Номенклатура          = Параметры.Номенклатура;
	Характеристика        = Параметры.Характеристика;
	КонтрольАкцизныхМарок = Параметры.КонтрольАкцизныхМарок;
	
	ИспользоватьАкцизныеМарки = Истина;
	
	СобытияФормЕГАИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоддерживаемыеТипыПодключаемогоОборудования = "СканерШтрихкода";
	
	ОповещениеПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		ОповещениеПриПодключении,
		ЭтотОбъект,
		ПоддерживаемыеТипыПодключаемогоОборудования);
		
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеАкцизнойМарки Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.ДекорацияКартинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОповещениеПриОтключении = Новый ОписаниеОповещения("ОтключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(
		ОповещениеПриОтключении, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольАкцизныхМарок Тогда
		Возврат;
	КонецЕсли;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольАкцизныхМарок Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок();
	ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок = КонтрольАкцизныхМарок;
	ПараметрыСканированияАкцизныхМарок.ПоказатьОшибкуКонтроляАкцизныхМарок = Ложь;
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		ПараметрыСканированияАкцизныхМарок.Форма = ВладелецФормы;
	КонецЕсли;
	
	ОповещенияПриЗавершении = СобытияФормЕГАИСКлиент.СтруктураОповещенийВнешнегоСобытия(ЭтотОбъект,, Ложь, ПараметрыСканированияАкцизныхМарок);
	
	// ПодключаемоеОборудование
	СобытияФормЕГАИСКлиент.ВнешнееСобытиеПолученыШтрихкоды(ОповещенияПриЗавершении, ЭтотОбъект, Источник, Событие, Данные, ПараметрыСканированияАкцизныхМарок);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	МассивКодовМарок = Новый Массив;
	Для Каждого СтрокаТЧ Из АкцизныеМарки Цикл
		Если ПустаяСтрока(СтрокаТЧ.КодАкцизнойМарки) Тогда
			Поле = "АкцизныеМарки[%1].КодАкцизнойМарки";
			Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Поле, Формат(АкцизныеМарки.Индекс(СтрокаТЧ), "ЧРГ="));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не указана акцизная марка'"),, Поле, "", Отказ);
		Иначе
			МассивКодовМарок.Добавить(СтрокаТЧ.КодАкцизнойМарки);
		КонецЕсли;
	КонецЦикла;
	
	МассивОшибочныхМарок = КодыМарокНеСоответствующихФормату(МассивКодовМарок);
	
	Для Каждого КодАкцизнойМарки Из МассивОшибочныхМарок Цикл
		СтрокиТаблицы = АкцизныеМарки.НайтиСтроки(Новый Структура("КодАкцизнойМарки", КодАкцизнойМарки));
		Если СтрокиТаблицы.Количество() > 0 Тогда
			Поле = "АкцизныеМарки[%1].КодАкцизнойМарки";
			Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Поле, Формат(АкцизныеМарки.Индекс(СтрокиТаблицы[0]), "ЧРГ="));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Штрихкод не соответствует формату штрихкода акцизной марки.'"),, Поле, "", Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Операция = АкцизныеМаркиКлиентСервер.ОперацияКонтроляАкцизныхМарокПоУмолчанию();
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		Операция = АкцизныеМаркиЕГАИСКлиент.ОперацияКонтроляАкцизныхМарок(ВладелецФормы);
	КонецЕсли;
	
	Если ПроверитьАкцизныеМаркиПередЗакрытием Тогда
		МассивОшибочныхМарок = КодыПроданныхМарок(МассивКодовМарок, Операция);
		
		Для Каждого КодАкцизнойМарки Из МассивОшибочныхМарок Цикл
			СтрокиТаблицы = АкцизныеМарки.НайтиСтроки(Новый Структура("КодАкцизнойМарки", КодАкцизнойМарки));
			Если СтрокиТаблицы.Количество() > 0 Тогда
				Поле = "АкцизныеМарки[%1].КодАкцизнойМарки";
				Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Поле, Формат(АкцизныеМарки.Индекс(СтрокиТаблицы[0]), "ЧРГ="));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Считанная акцизная марка была реализована ранее.'"),, Поле, "", Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(АдресТаблицыАкцизныхМаркиВоВременномХранилище(ВладелецФормы.УникальныйИдентификатор));
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьАкцизныеМарки(Команда)
	
	НоваяСтрока = АкцизныеМарки.Добавить();
	НоваяСтрока.КодАкцизнойМарки = СгенерироватьАкцизнуюМарку();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АкцизныеМаркиКодАкцизнойМаркиПриИзменении(Элемент)
	
	ПроверитьАкцизныеМаркиПередЗакрытием = КонтрольАкцизныхМарок;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область АкцизныеМарки

&НаСервереБезКонтекста
Функция КодыМарокНеСоответствующихФормату(МассивКодовМарок)
	
	Результат = Новый Массив;
	
	Для Каждого КодАкцизнойМарки Из МассивКодовМарок Цикл
		Если НЕ АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(КодАкцизнойМарки) Тогда
			Результат.Добавить(КодАкцизнойМарки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПолученаАкцизнаяМарка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КодАкцизнойМарки = Результат.КодАкцизнойМарки;
	Характеристика = Результат.Характеристика;
	Упаковка = Результат.Упаковка;
	
	Если КонтрольАкцизныхМарок Тогда
		
		ТекстОшибки = Результат.ТекстОшибкиКонтроляАкцизныхМарок;
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			
			Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеАкцизнойМарки Тогда
				Элементы.ТекстОшибкиКонтроляАкцизныхМарок.Заголовок = ТекстОшибки;
				Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольАкцизныхМарок;
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Строка(ТекстОшибки));
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.Номенклатура)
		И Результат.Номенклатура <> Номенклатура Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Акцизная марка не соответствует номенклатуре %1'"), Номенклатура));
		Возврат;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеАкцизнойМарки Тогда
		
		ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании", 0.1, Истина);
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРедактированиеСпискаМарок Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("КодАкцизнойМарки", КодАкцизнойМарки);
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = АкцизныеМарки.Добавить();
			НоваяСтрока.КодАкцизнойМарки = КодАкцизнойМарки;
			
		Иначе
			
			Элементы.АкцизныеМарки.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
	Результат = АкцизныеМаркиКлиентСервер.РезультатОбработкиШтрихкодаАкцизнойМарки(КодАкцизнойМарки);
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицыАкцизныхМаркиВоВременномХранилище(УникальныйИдентификатор)
	
	Возврат ПоместитьВоВременноеХранилище(АкцизныеМарки.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервереБезКонтекста
Функция КодыПроданныхМарок(МассивКодовМарок, Операция)
	
	Результат = Новый Массив;
	
	Для Каждого КодАкцизнойМарки Из МассивКодовМарок Цикл
		Если НЕ АкцизныеМаркиВызовСервера.ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, "") Тогда
			Результат.Добавить(КодАкцизнойМарки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Штрихкоды

&НаКлиенте
Процедура Подключаемый_ПолученыШтрихкоды(ДанныеШтрихкодов, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Штрихкод не соответствует формату штрихкода акцизной марки PDF417.'"));
	
КонецПроцедуры

#КонецОбласти

#Область Оборудование

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При отключении оборудования произошла ошибка: ""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция СгенерироватьАкцизнуюМарку()
	
	ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());
	СлучайноеЧисло = ГенераторСлучайныхЧисел.СлучайноеЧисло(1, 9999);
	
	КодАкцизнойМарки = "45300002922078110073842805150040017640901295000024" + Формат(ТекущаяДатаСеанса(), "ДФ=ddMMyyyyЧЧммсс") + Формат(СлучайноеЧисло, "ЧЦ=4; ЧВН=; ЧГ=0");
	
	Возврат КодАкцизнойМарки;
	
КонецФункции

#КонецОбласти
