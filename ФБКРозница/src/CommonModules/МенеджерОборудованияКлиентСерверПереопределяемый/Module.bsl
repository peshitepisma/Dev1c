
#Область ПрограммныйИнтерфейс

// Обработчик события вызывается при получении имени кассира.
//
// Параметры:
//  ИмяКассира - Строка, Неопределено - Текст, используемый для заполнения документа
//  СтандартнаяОбработка - Булево
//
Процедура ОбработкаЗаполненияИмяКассира(ИмяКассира, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Функция переопределяет типовой формато-логический контроль чека.
// Параметры:
//   ОбщиеПараметры - Структура, полученная ранее методом МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека,
//                    и заполненная данными чека.
//                    Содержит параметры для контроля:
//                      СпособФорматоЛогическогоКонтроля - ПеречислениеСсылка.СпособыФорматоЛогическогоКонтроля - если не заполнена,
//                                                         то контроль не выполняется,
//                      ДопустимоеРасхождениеФорматоЛогическогоКонтроля - Число - по умолчанию установленное 54-ФЗ отклонение - 0.01,
//
//   СтандартнаяОбработка - Булево - Если присваивается значение Ложь, то стандарнтый контроль выполняться не будет.
//
//   ПодключаемоеОборудование - СправочникСсылка.ПодключаемоеОборудования - не обязательный.
//                              Если заполнено оборудование и не заполнен способ контроля в общих параметрах,
//                              то способ контроля и допустимое расхождение можно получать из подключаемого оборудования.
Процедура ПровестиФорматоЛогическийКонтроль(ОбщиеПараметры, СтандартнаяОбработка, ПодключаемоеОборудование = Неопределено) Экспорт
	
КонецПроцедуры

// Функция выполняет разделение фискальной строки.
//
Процедура РазделитьФискальнуюСтроку(ТекущаяПозиция, НовыеПозицииЧека, РасчетнаяЦена, РазницаСумм, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Функция выполняет проверку необходимости формато-логическоко контроля.
//
Функция НуженФорматоЛогическийКонтроль(ОбщиеПараметры, СтандартнаяОбработка) Экспорт
	
КонецФункции

// Функция возвращает поддерживаемые форматы ФФД в прикладном решении.
//
Функция ПолучитьПоддерживаемыйФорматыФФД() Экспорт
	
	ФорматыФФД = Новый СписокЗначений();
	ФорматыФФД.Добавить("1.0");
	ФорматыФФД.Добавить("1.0.5");
	ФорматыФФД.Добавить("1.1");
	Возврат ФорматыФФД;
	
КонецФункции

#КонецОбласти