
#Область ПрограммныйИнтерфейс

// Обрабатывает считанный ШК в зависимости от его формата.
//
// Параметры:
//  ОповещенияПриЗавершении - Структура - структура с ключами:
//   * ПриСканированииШтрихкода - ОписаниеОповещения -  процедура, вызываемая при сканировании любого штрихкода, не нанесенного на акцизную марку,
//   * ПриСканированииАкцизнойМарки - ОписаниеОповещения - процедура, вызываемая при сканировании штрихкода PDF417 акцизной марки,
//   * ПриСканированииDataMatrix - ОписаниеОповещения - процедура, вызываемая при сканировании штрихкода Data Matrix акцизной марки.
//  Форма - УправляемаяФорма - форма, в которой отсканирован штрихкод,
//  ДанныеШтрихкода - Структура - структура с ключами:
//   * Штрихкод - Строка - считанный штрихкод,
//   * Количество - Число - количество упаковок.
//  ПараметрыСканированияАкцизныхМарок - Структура - параметры обработки акцизной марки (см. АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок()).
//
Процедура ОбработатьДанныеШтрихкода(ОповещенияПриЗавершении, Форма, ДанныеШтрихкода, ПараметрыСканированияАкцизныхМарок = Неопределено) Экспорт
	
	Если ПараметрыСканированияАкцизныхМарок = Неопределено Тогда
		ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок();
	КонецЕсли;
	
	Если ОповещенияПриЗавершении.Свойство("ПриСканированииАкцизнойМарки") Тогда
		РезультатОбработки = ОбработатьШтрихкодАкцизнойМарки(ДанныеШтрихкода.Штрихкод, ПараметрыСканированияАкцизныхМарок);
		
		Если РезультатОбработки.Обработан Тогда
			Если ПустаяСтрока(РезультатОбработки.ТекстОшибкиКонтроляАкцизныхМарок) ИЛИ НЕ ПараметрыСканированияАкцизныхМарок.ПоказатьОшибкуКонтроляАкцизныхМарок Тогда
				ВыполнитьОбработкуОповещения(ОповещенияПриЗавершении.ПриСканированииАкцизнойМарки, РезультатОбработки);
			Иначе
				ОткрытьФорму("Обработка.РаботаСАкцизнымиМаркамиЕГАИС.Форма.ФормаВводаАкцизнойМарки", РезультатОбработки, Форма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОповещенияПриЗавершении.Свойство("ПриСканированииDataMatrix") Тогда
		РезультатОбработки = ОбработатьШтрихкодDataMatrix(ДанныеШтрихкода.Штрихкод);
		
		Если РезультатОбработки.Обработан Тогда
			Если НЕ ПустаяСтрока(РезультатОбработки.ТекстОшибки) Тогда
				ОчиститьСообщения();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатОбработки.ТекстОшибки);
			ИначеЕсли РезультатОбработки.Справки2.Количество() = 0 И ПараметрыСканированияАкцизныхМарок.ПоказатьОшибкуОтсутствияСправок2 Тогда
				ОчиститьСообщения();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='По считанному штрихкоду справок 2 не обнаружено.'"));
			Иначе
				ВыполнитьОбработкуОповещения(ОповещенияПриЗавершении.ПриСканированииDataMatrix, РезультатОбработки);
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПолученныеДанные = Новый Массив;
	ПолученныеДанные.Добавить(ДанныеШтрихкода);
	
	ВыполнитьОбработкуОповещения(ОповещенияПриЗавершении.ПриСканированииШтрихкода, ПолученныеДанные);
	
КонецПроцедуры

// Процедура - Открыть форму считывания акцизной марки
//
// Параметры:
//  Результат - Булево - Не используется
//  ДополнительныеПараметры - Структура - Параметры открытия формы считывания марки: (Форма, ИдентификаторСтроки, Редактирование, АдресВоВременномХранилище)
//
Процедура ОткрытьФормуСчитыванияАкцизнойМарки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДополнительныеПараметры.Форма, "Объект") Тогда
		Источник = ДополнительныеПараметры.Форма.Объект;
	Иначе
		Источник = ДополнительныеПараметры.Форма;
	КонецЕсли;
	
	ТекущиеДанные = Источник.Товары.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	
	Если Не ТекущиеДанные.МаркируемаяАлкогольнаяПродукция Тогда
		ПоказатьПредупреждение(
			Неопределено,
			НСтр("ru = 'Для данной строки не указываются акцизные марки'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Номенклатура"             , ТекущиеДанные.Номенклатура);
	ПараметрыОткрытияФормы.Вставить("Характеристика"           , ТекущиеДанные.Характеристика);
	ПараметрыОткрытияФормы.Вставить("Редактирование"           , ДополнительныеПараметры.Редактирование);
	ПараметрыОткрытияФормы.Вставить("КонтрольАкцизныхМарок"    , ДополнительныеПараметры.КонтрольАкцизныхМарок);
	ПараметрыОткрытияФормы.Вставить("АдресВоВременномХранилище", ДополнительныеПараметры.АдресВоВременномХранилище);
	
	ОткрытьФорму(
		"Обработка.РаботаСАкцизнымиМаркамиЕГАИС.Форма.ФормаВводаАкцизнойМарки",
		ПараметрыОткрытияФормы,
		ДополнительныеПараметры.Форма,,,,
		Новый ОписаниеОповещения("Подключаемый_ПолученаАкцизнаяМарка", ДополнительныеПараметры.Форма, ДополнительныеПараметры))
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Подключаемый_ПолученаАкцизнаяМарка(ДанныеПоАкцизнымМаркам, ДополнительныеПараметры) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДополнительныеПараметры.Форма, "Объект") Тогда
		Источник = ДополнительныеПараметры.Форма.Объект;
	Иначе
		Источник = ДополнительныеПараметры.Форма;
	КонецЕсли;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Если Не ДополнительныеПараметры.Редактирование Тогда
		
		Если ДанныеПоАкцизнымМаркам.АкцизнаяМаркаНайдена Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Акцизная марка %1 уже введена для номенклатуры в строке %2'"),
					ДанныеПоАкцизнымМаркам.КодАкцизнойМарки,
					Источник.Товары.Индекс(ТекущиеДанные) + 1));
			Возврат;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторСтроки) Тогда
			ТекущиеДанные.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		НоваяСтрока = Источник.АкцизныеМарки.Добавить();
		НоваяСтрока.ИдентификаторСтроки = ТекущиеДанные.ИдентификаторСтроки;
		НоваяСтрока.КодАкцизнойМарки = ДанныеПоАкцизнымМаркам.КодАкцизнойМарки;
		
		ДанныеПоАкцизнымМаркам.Количество = ДанныеПоАкцизнымМаркам.Количество + 1;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ИмяКолонкиКоличество") Тогда
		ИмяКолонкиКоличество = ДополнительныеПараметры.ИмяКолонкиКоличество;
	Иначе
		ИмяКолонкиКоличество = "Количество";
	КонецЕсли;
	
	ТекущиеДанные.КоличествоАкцизныхМарок = ДанныеПоАкцизнымМаркам.Количество;
	
	ДополнительныеПараметры.Форма.Модифицированность = Истина;
	
	АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущиеДанные, ИмяКолонкиКоличество);
	
	Если ТекущиеДанные[ИмяКолонкиКоличество] < ДанныеПоАкцизнымМаркам.Количество Тогда
		
		ТекущиеДанные[ИмяКолонкиКоличество] = ДанныеПоАкцизнымМаркам.Количество;
		
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(
				"ИзменениеАкцизныхМарокЗавершение",
				ДополнительныеПараметры.Форма,
				ДополнительныеПараметры),
			ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет, что считанный ШК является акцизной маркой в формате PDF417 и находит сопоставленную номенклатуру.
//
// Параметры:
//  Штрихкод - Строка - считанный штрихкод,
//  ПараметрыСканирования - Структура - см. функцию АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок().
//
// Возвращаемое значение:
//  Структура - результат обработки акцизной марки (см. функцию АкцизныеМаркиКлиентСервер.РезультатОбработкиШтрихкодаАкцизнойМарки()).
//
Функция ОбработатьШтрихкодАкцизнойМарки(Штрихкод, ПараметрыСканирования)
	
	Результат = АкцизныеМаркиКлиентСервер.РезультатОбработкиШтрихкодаАкцизнойМарки(Штрихкод);
	
	Если СтрДлина(Штрихкод) <> 68 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыКонтроляАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыКонтроляАкцизныхМарок(ПараметрыСканирования.КонтрольАкцизныхМарок);
	Если ТипЗнч(ПараметрыСканирования.Форма) = Тип("УправляемаяФорма") Тогда
		ПараметрыКонтроляАкцизныхМарок.Операция = ОперацияКонтроляАкцизныхМарок(ПараметрыСканирования.Форма);
	КонецЕсли;
	
	Возврат АкцизныеМаркиВызовСервера.ОбработатьШтрихкодАкцизнойМарки(Штрихкод, ПараметрыКонтроляАкцизныхМарок);
	
КонецФункции

// Проверяет, что считанный ШК является акцизной маркой в формате Data Matrix и находит по диапазону справки 2.
//
// Параметры:
//  Штрихкод - Строка - считанный штрихкод,
//
// Возвращаемое значение:
//  Структура - результат обработки акцизной марки (см. функцию АкцизныеМаркиКлиентСервер.РезультатОбработкиШтрихкодаDataMatrix()).
//
Функция ОбработатьШтрихкодDataMatrix(Штрихкод)
	
	Результат = АкцизныеМаркиКлиентСервер.РезультатОбработкиШтрихкодаDataMatrix(Штрихкод);
	
	Если НЕ АкцизныеМаркиКлиентСервер.ЭтоШтрихкодDataMatrix(Штрихкод) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат АкцизныеМаркиВызовСервера.ОбработатьШтрихкодDataMatrix(Штрихкод);
	
КонецФункции

// Возвращает операцию контроля акцизных марок: "Продажа", "Возврат", "АктПостановкиНаБаланс", "АктСписания".
//
Функция ОперацияКонтроляАкцизныхМарок(Форма) Экспорт
	
	Результат = "";
	
	Если Форма.ИмяФормы = "Документ.АктПостановкиНаБалансЕГАИС.Форма.ФормаДокумента" Тогда
		Результат = "АктПостановкиНаБаланс";
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.АктСписанияЕГАИС.Форма.ФормаДокумента" Тогда
		Результат = "АктСписания";
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ЧекЕГАИСВозврат.Форма.ФормаДокумента" Тогда
		Результат = "Возврат";
	КонецЕсли;
	
	АкцизныеМаркиЕГАИСКлиентПереопределяемый.ПриОпределенииОперацииКонтроляАкцизныхМарок(Форма, Результат);
	
	Если ПустаяСтрока(Результат) Тогда
		Результат = АкцизныеМаркиКлиентСервер.ОперацияКонтроляАкцизныхМарокПоУмолчанию();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти