
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнениеАкцизныхМарок(Объект, Товары, АкцизныеМарки, Отказ, ПроверятьТолькоЕслиЗаполнены = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ МаркируемаяПродукцияКоличество
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиКоличество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемаяПродукцияКоличество.АлкогольнаяПродукция,
	|	МаркируемаяПродукцияКоличество.Количество КАК КоличествоМаркируемаяПродукция,
	|	ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) КАК КоличествоАкцизныеМарки,
	|	МаркируемаяПродукцияКоличество.НомерСтроки
	|ИЗ
	|	МаркируемаяПродукцияКоличество КАК МаркируемаяПродукцияКоличество
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиКоличество КАК АкцизныеМаркиКоличество
	|		ПО МаркируемаяПродукцияКоличество.ИдентификаторСтроки = АкцизныеМаркиКоличество.ИдентификаторСтроки
	|ГДЕ
	|	МаркируемаяПродукцияКоличество.Количество <> ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0)
	|	И &УсловиеАкцизныеМаркиЗаполнены
	|");
	
	Если ПроверятьТолькоЕслиЗаполнены Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) > 0");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "Истина");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Товары",        Товары.Выгрузить( , "АлкогольнаяПродукция, ИдентификаторСтроки, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", АкцизныеМарки.Выгрузить( , " ИдентификаторСтроки"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
		                        Выборка.НомерСтроки,
		                        Выборка.АлкогольнаяПродукция,
		                        Выборка.КоличествоМаркируемаяПродукция,
		                        Выборка.КоличествоАкцизныеМарки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),
				,
				Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает адрес таблицы акцизных марки во временном хранилище
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИдентификаторСтроки	 - Строка - Идентификатор строки
// 
// Возвращаемое значение:
//  Строка - Адрес во временном хранилище
//
Функция АдресТаблицыАкцизныхМаркиВоВременномХранилище(Форма, ИдентификаторСтроки) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	
	АкцизныеМарки = Источник.АкцизныеМарки.Выгрузить(Отбор, "КодАкцизнойМарки");
	
	Возврат ПоместитьВоВременноеХранилище(АкцизныеМарки, Форма.УникальныйИдентификатор);
	
КонецФункции

// Возвращает информацию по акцизным маркам для строки ТЧ Товары
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИдентификаторСтроки	 - Строка - Идентификатор строки ТЧ
//  КодАкцизнойМарки	 - Строка - Код акцизной марки
// 
// Возвращаемое значение:
//  Структура - Количество, АкцизнаяМаркаНайдена, КодАкцизнойМарки
//
Функция ДанныеПоАкцизнымМаркам(Форма, ИдентификаторСтроки, КодАкцизнойМарки = "") Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	НайденныеСтроки = Источник.АкцизныеМарки.НайтиСтроки(Отбор);
	
	ОтборАкцизнаяМарка = Новый Структура;
	ОтборАкцизнаяМарка.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
	ОтборАкцизнаяМарка.Вставить("КодАкцизнойМарки", КодАкцизнойМарки);
	НайденныеСтрокиАкцизнаяМарка = Источник.АкцизныеМарки.НайтиСтроки(ОтборАкцизнаяМарка);
	
	Результат = Новый Структура;
	Результат.Вставить("Количество",           НайденныеСтроки.Количество());
	Результат.Вставить("АкцизнаяМаркаНайдена", НайденныеСтрокиАкцизнаяМарка.Количество() > 0);
	Результат.Вставить("КодАкцизнойМарки",     КодАкцизнойМарки);
	
	Возврат Результат;
	
КонецФункции

// Удаляет акцизные марки для данных табличной части Товары
//
// Параметры:
//  Форма	 - УправляемаяФорма - Форма
//  Данные	 - Массив (СтрокаТЧ) - Строка (строки) для которых требуется удалить акцизные марки
//
Процедура УдалитьАкцизныеМарки(Форма, Данные) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		ИдентификаторыСтрок = Данные;
	Иначе
		ИдентификаторыСтрок = Новый Массив;
		ИдентификаторыСтрок.Добавить(Данные);
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		
		Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
		НайденныеСтроки = Источник.АкцизныеМарки.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			Источник.АкцизныеМарки.Удалить(Источник.АкцизныеМарки.Индекс(СтрокаТЧ));
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Загружает акцизные марки из временного хранилища
//
// Параметры:
//  Форма						 - УправляемаяФорма - Форма
//  ИдентификаторСтроки			 - Строка - Индентификатор строки ТЧ
//  АдресВоВременномХранилище	 - Строка - Адрес во временном хранилище
// 
// Возвращаемое значение:
//  Структура - Количество, АкцизнаяМаркаНайдена, КодАкцизнойМарки
//
Функция ЗагрузитьАкцизныеМаркиИзВременногоХранилища(Форма, ИдентификаторСтроки, АдресВоВременномХранилище) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	УдалитьАкцизныеМарки(Форма, ИдентификаторСтроки);
	
	АкцизныеМарки = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Для Каждого СтрокаТЧ Из АкцизныеМарки Цикл
		НоваяСтрока = Источник.АкцизныеМарки.Добавить();
		НоваяСтрока.КодАкцизнойМарки = СтрокаТЧ.КодАкцизнойМарки;
		НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
	КонецЦикла;
	
	Возврат ДанныеПоАкцизнымМаркам(Форма, ИдентификаторСтроки, "");
	
КонецФункции

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки,
	|	Т.ИдентификаторСтроки,
	|	Т.АлкогольнаяПродукция
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИдентификаторСтроки,
	|	Т.КодАкцизнойМарки
	|ПОМЕСТИТЬ АкцизныеМаркиПодготовка
	|ИЗ
	|	&АкцизныеМарки КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.КодАкцизнойМарки) КАК КоличествоАкцизныхМарок
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	АкцизныеМаркиПодготовка КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                                                   КАК НомерСтроки,
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ) КАК МаркируемаяАлкогольнаяПродукция,
	|	АкцизныеМарки.КоличествоАкцизныхМарок                                КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО (АкцизныеМарки.ИдентификаторСтроки = Товары.ИдентификаторСтроки)");
	
	Товары = Источник.Товары.Выгрузить();
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Параметры.Вставить("Товары", Товары);
	Запрос.Параметры.Вставить("АкцизныеМарки", Источник.АкцизныеМарки.Выгрузить());
	
	Отбор = Новый Структура;
	Отбор.Вставить("НомерСтроки");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		СтрокаТЧ.МаркируемаяАлкогольнаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
		СтрокаТЧ.КоличествоАкцизныхМарок         = Выборка.КоличествоАкцизныхМарок;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает таблицу значений классификатора типов акцизных марок.
//
Функция КлассификаторТиповАкцизныхМарок() Экспорт
	
	ТаблицаТиповАкцизныхМарок = Новый ТаблицаЗначений;
	
	Макет = ПолучитьОбщийМакет("ТипыАкцизныхМарокЕГАИС");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Макет.ПолучитьТекст());
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML'");
	ИначеЕсли ЧтениеXML.Имя <> "Items" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
	КонецЕсли;
	
	ИменаКолонок = СтрЗаменить(ЧтениеXML.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	КоличествоКолонок = СтрЧислоСтрок(ИменаКолонок);
	
	Для Сч = 1 По КоличествоКолонок Цикл
		ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
		
		ТаблицаТиповАкцизныхМарок.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка"));
	КонецЦикла;
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Items" Тогда
			Прервать;
		ИначеЕсли ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		ИначеЕсли ЧтениеXML.Имя <> "Item" Тогда
			ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
		КонецЕсли;
		
		новСтр = ТаблицаТиповАкцизныхМарок.Добавить();
		Для Сч = 1 По КоличествоКолонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
			
			новСтр[Сч-1] = ЧтениеXML.ПолучитьАтрибут(ИмяКолонки);
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаТиповАкцизныхМарок.Сортировать(ТаблицаТиповАкцизныхМарок.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаТиповАкцизныхМарок;
	
КонецФункции

// Возвращает признак видимости информационной надписи о доступности сканирования штрихкода "Data Matrix" акцизной марки.
//
// Параметры:
//  РассчитыватьПоОстаткам - Булево - признак расчета статистики заполнения по остаткам справок 2.
//
// Возвращаемое значение:
//  Булево - признак видимости информационной надписи.
//
Функция ВидимостьИнформацииОСканированииDataMatrix(РассчитыватьПоОстаткам) Экспорт
	
	ПроцентЗаполнения = ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам);
	
	Возврат ПроцентЗаполнения >= 50;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает процент заполнения диапазонов номеров акцизных марок в справках 2.
//
Функция ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам)
	
	Результат = 0;
	
	Запрос = Новый Запрос;
	
	Если РассчитыватьПоОстаткам Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(, Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
		|ГДЕ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.КоличествоОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
		|		ПО Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка = ИсходныеДанные.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИсходныеДанные.Справка2) КАК КоличествоСправок
		|ПОМЕСТИТЬ ОстаткиСправок2
		|ИЗ
		|	ИсходныеДанные КАК ИсходныеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиСправок2.КоличествоСправок, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаполненныеДиапазоны.КоличествоСправок, 0) / ОстаткиСправок2.КоличествоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны,
		|	ОстаткиСправок2 КАК ОстаткиСправок2";
		
	Иначе
		
		ПереданныеСправки2 = Новый Массив;
		Период = Неопределено;
		
		Пока ПереданныеСправки2.Количество() < 500 Цикл
			
			ЗапросПоСправкам = Новый Запрос;
			
			Если Период = Неопределено Тогда
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			Иначе
				ЗапросПоСправкам.УстановитьПараметр("Период", Период);
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|	И ОстаткиАлкогольнойПродукцииЕГАИС.Период <= &Период
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			КонецЕсли;
			
			РезультатЗапроса = ЗапросПоСправкам.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				Прервать;
			КонецЕсли;
			
			Выборка = ЗапросПоСправкам.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Если ПереданныеСправки2.Найти(Выборка.Справка2) = Неопределено Тогда
					ПереданныеСправки2.Добавить(Выборка.Справка2);
				КонецЕсли;
				
				Период = Выборка.Период;
			КонецЦикла;
			
			Если Выборка.Количество() < 500 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Справки2", ПереданныеСправки2);
		Запрос.УстановитьПараметр("ПереданоСправок", ПереданныеСправки2.Количество());
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|ГДЕ
		|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка В(&Справки2)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ПереданоСправок = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЗаполненныеДиапазоны.КоличествоСправок / &ПереданоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если ТипЗнч(Выборка.ПроцентЗаполнения) = Тип("Число") Тогда
			Результат = Выборка.ПроцентЗаполнения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Окр(Результат, 2);
	
КонецФункции

#КонецОбласти